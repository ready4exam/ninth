<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CBSE Class 9 Social Science Curriculum</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&family=Merriweather:wght@400;700&display=swap" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        sans: ['Inter', 'sans-serif'],
                        serif: ['Merriweather', 'serif'],
                    },
                    colors: {
                        'cbse-blue': '#1a3e6a',
                        'cbse-light': '#f0f4f8',
                        'accent-red': '#dc2626',   // History
                        'accent-green': '#059669', // Geography
                        'accent-orange': '#ea580c',// Economics
                        'accent-purple': '#9333ea',// Civics
                        'unit-bg': '#e3f2fd',
                    }
                }
            }
        }
    </script>
    <script src="https://unpkg.com/lucide@latest"></script>
    <style>
        .book-card {
            transition: all 0.3s ease;
            cursor: pointer;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.06);
            transform: translate(0);
        }
        .book-card:hover {
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);
            transform: translateY(-4px);
        }
        .unit-content {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.4s ease-in-out;
        }
        .unit-header.active .icon-rotate {
            transform: rotate(180deg);
        }
        .back-btn {
            display: inline-flex;
            align-items: center;
            font-size: 1.125rem;
            font-weight: 500;
            color: #1a3e6a;
            margin-bottom: 1.5rem;
            transition: color 150ms;
        }
        .back-btn:hover {
            color: rgba(26, 62, 106, 0.8);
        }
        .auth-container {
            max-width: 400px;
            margin: 0 auto;
            padding: 2rem;
            border-radius: 0.5rem;
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 50;
        }
    </style>
</head>
<body class="bg-cbse-light min-h-screen antialiased">

    <header class="bg-white shadow-lg sticky top-0 z-10 border-t-8 border-cbse-blue">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex flex-col md:flex-row justify-between items-center">
            <div class="flex items-center space-x-3 mb-4 md:mb-0 cursor-pointer" onclick="window.location.href='index_class_9.html'">
                <span data-lucide="globe" class="text-cbse-blue w-8 h-8"></span>
                <h1 class="text-2xl font-extrabold text-cbse-blue">CBSE Class 9 Social Science Portal</h1>
            </div>
            <nav class="flex space-x-2 sm:space-x-4">
                <!-- Navigation links -->
                <button id="logout-nav-btn" class="px-3 py-1 rounded-lg text-gray-600 hover:bg-cbse-light hover:text-cbse-blue transition hidden">ðŸšª Logout</button>
            </nav>
        </div>
    </header>

    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">

        <div id="quiz-content-wrapper">
            <div id="book-select-view" class="view">
                <h2 class="text-3xl font-bold text-gray-800 mb-8 border-b-2 border-cbse-blue pb-2 font-serif">Select Social Science Subject</h2>
                <div class="grid md:grid-cols-4 gap-6">

                    <div class="book-card bg-white p-6 rounded-xl border-t-4 border-accent-red book-select-btn" data-book="History" data-title="History: Events and Processes" data-color="accent-red">
                        <span data-lucide="landmark" class="w-10 h-10 text-accent-red mb-3"></span>
                        <h3 class="text-xl font-bold text-gray-800 mb-1 font-serif">History</h3>
                        <p class="text-gray-500 text-sm">Study of the French Revolution, Socialism, and Nazism.</p>
                    </div>

                    <div class="book-card bg-white p-6 rounded-xl border-t-4 border-accent-green book-select-btn" data-book="Geography" data-title="Geography: Contemporary India I" data-color="accent-green">
                        <span data-lucide="map" class="w-10 h-10 text-accent-green mb-3"></span>
                        <h3 class="text-xl font-bold text-gray-800 mb-1 font-serif">Geography</h3>
                        <p class="text-gray-500 text-sm">India's Size, Physical Features, Climate, and Population.</p>
                    </div>

                    <div class="book-card bg-white p-6 rounded-xl border-t-4 border-accent-purple book-select-btn" data-book="Civics" data-title="Civics: Democratic Politics I" data-color="accent-purple">
                        <span data-lucide="users" class="w-10 h-10 text-accent-purple mb-3"></span>
                        <h3 class="text-xl font-bold text-gray-800 mb-1 font-serif">Civics</h3>
                        <p class="text-gray-500 text-sm">Constitutional Design, Electoral Politics, and Democratic Rights.</p>
                    </div>

                    <div class="book-card bg-white p-6 rounded-xl border-t-4 border-accent-orange book-select-btn" data-book="Economics" data-title="Economics: Development and Challenges" data-color="accent-orange">
                        <span data-lucide="trending-up" class="w-10 h-10 text-accent-orange mb-3"></span>
                        <h3 class="text-xl font-bold text-gray-800 mb-1 font-serif">Economics</h3>
                        <p class="text-gray-500 text-sm">Palampur, People as Resource, Poverty, and Food Security in India.</p>
                    </div>

                </div>

                <section id="mock-test" class="bg-white p-8 rounded-xl shadow-lg border-t-2 border-b-2 border-cbse-blue mt-12 flex flex-col items-center text-center">
                    <h4 class="text-3xl font-extrabold text-cbse-blue mb-2 font-serif">Full SST Mock Test</h4>
                    <p class="text-gray-600 text-lg mb-4">Test your readiness with a full-length examination covering all four Social Science subjects.</p>
                    <button class="px-8 py-3 bg-cbse-blue text-white font-bold rounded-lg shadow-xl hover:bg-cbse-blue/90 transition duration-150 text-xl quiz-start-btn" data-chapter="Class 9 Full SST Quiz">
                        Start Master Quiz
                    </button>
                </section>
            </div>

            <div id="units-view" class="view hidden">
                <button id="back-to-books-btn" class="back-btn">
                    <span data-lucide="arrow-left" class="w-5 h-5 mr-2"></span> Back to Subjects
                </button>
                <h2 id="units-view-title" class="text-3xl font-bold text-gray-800 mb-6 border-b-2 pb-2 font-serif"></h2>
                <div id="units-list">
                </div>
            </div>
        </div>
        </main>

    <!-- Authentication Modal (Hidden by default) -->
    <div id="auth-modal" class="modal-overlay hidden">
        <div id="auth-view" class="auth-container bg-white relative">
            <button id="close-modal-btn" class="absolute top-3 right-3 text-gray-400 hover:text-gray-600 transition">
                <span data-lucide="x" class="w-6 h-6"></span>
            </button>
            <h2 id="auth-header" class="text-2xl font-bold text-center mb-6 text-cbse-blue font-serif">
                Login to Access Quizzes
            </h2>

            <div class="mt-4">
                <button id="google-sign-in-btn" class="w-full bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-4 rounded-lg transition flex items-center justify-center space-x-3 shadow-md">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/4/4a/Logo_google_g_standard.png" alt="Google logo" class="w-6 h-6 bg-white rounded-full">
                    <span>Sign in with Google</span>
                </button>
            </div>

            <p id="error-message" class="mt-4 text-center text-red-500 font-medium"></p>
        </div>
    </div>

    <footer class="bg-cbse-blue mt-12 py-6">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center text-white">
            <small class="text-sm opacity-80">Â© 2025 CBSE Class 9 Academic Portal | Social Science Sub-Topics</small>
        </div>
    </footer>

    <!-- Firebase Imports (Required for auth/firestore logic) -->
    <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-auth-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.23.0/firebase-firestore-compat.js"></script>


    <script>
        // Use placeholder config and globals from the environment
        const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';
        const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : { /* Default values if run outside Canvas */ };
        const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;

        // Initialize Firebase App, Auth, and Firestore using the compatibility layer
        let app, auth, db;
        try {
            app = firebase.initializeApp(firebaseConfig);
            auth = app.auth();
            db = app.firestore();
        } catch (e) {
            console.error("Firebase initialization failed:", e);
            // Fallback for environment without Firebase
            auth = {
                currentUser: null,
                signInWithPopup: () => Promise.reject(new Error("Auth not configured")),
                signOut: () => Promise.resolve(),
                onAuthStateChanged: (cb) => { cb(null); return () => {}; }
            };
            db = {
                collection: () => ({ add: () => Promise.resolve() })
            };
        }


        let isUserLoggedIn = false;
        let userId = 'anonymous';


        // --- DOM Elements ---
        const authModal = document.getElementById('auth-modal');
        const logoutNavBtn = document.getElementById('logout-nav-btn');
        const errorMessage = document.getElementById('error-message');
        const unitsList = document.getElementById('units-list');
        const unitsViewTitle = document.getElementById('units-view-title');
        const backToBooksBtn = document.getElementById('back-to-books-btn');
        const closeModalBtn = document.getElementById('close-modal-btn');
        const googleSignInBtn = document.getElementById('google-sign-in-btn');

        // --- AUTH/MODAL FUNCTIONS ---

        function showAuthModal() {
            authModal.classList.remove('hidden');
            errorMessage.textContent = '';
        }

        function hideAuthModal() {
            authModal.classList.add('hidden');
        }

        function updateAuthUI(user) {
             if (user) {
                isUserLoggedIn = true;
                userId = user.uid;
                logoutNavBtn.classList.remove('hidden');
            } else {
                isUserLoggedIn = false;
                userId = 'anonymous'; // Fallback ID if not logged in
                logoutNavBtn.classList.add('hidden');
            }
        }

        // --- GOOGLE SIGN-IN LOGIC ---
        googleSignInBtn.addEventListener('click', async () => {
             alert("Sign-in is simulated for this environment. Please authenticate via the platform's main dialog.");
        });


        // --- LOGOUT & AUTH STATE ---

        closeModalBtn.addEventListener('click', hideAuthModal);

        logoutNavBtn.addEventListener('click', async () => {
            try {
                if (auth.currentUser) {
                    await auth.signOut();
                    console.log("User signed out.");
                } else {
                    console.log("No user to sign out.");
                }
            } catch (error) {
                console.error("Error signing out:", error);
            }
        });

        auth.onAuthStateChanged((user) => {
            updateAuthUI(user);
        });

        // Use initial auth token for automatic sign-in if available
        async function autoSignIn() {
            if (initialAuthToken) {
                try {
                    await auth.signInWithCustomToken(initialAuthToken);
                    console.log("Signed in with custom token.");
                } catch (error) {
                    console.error("Error signing in with custom token:", error);
                    // Fallback to anonymous sign-in if token fails
                    await auth.signInAnonymously();
                }
            } else {
                 await auth.signInAnonymously();
            }
        }
        autoSignIn();


        // --- QUIZ DATA & LOGIC ---

        const bookData = {
            'History': [
                { unit: 'UNIT 1: Events and Processes', chapters: ['1. The French Revolution', '2. Socialism in Europe and the Russian Revolution', '3. Nazism and the Rise of Hitler'] }
            ],
            'Geography': [
                { unit: 'UNIT 2: Contemporary India I', chapters: ['1. India - Size and Location', '2. Physical Features of India', '3. Drainage'] },
                { unit: 'UNIT 3: Resources', chapters: ['4. Climate', '5. Natural Vegetation and Wildlife', '6. Population'] }
            ],
            'Civics': [
                { unit: 'UNIT 4: Democratic Politics I', chapters: ['1. What is Democracy? Why Democracy?', '2. Constitutional Design', '3. Electoral Politics', '4. Working of Institutions', '5. Democratic Rights'] }
            ],
            'Economics': [
                { unit: 'UNIT 5: Economics - I', chapters: ['1. The Story of Village Palampur', '2. People as Resource', '3. Poverty as a Challenge', '4. Food Security in India'] }
            ]
        };

        function startQuiz(chapterName) {
            if (!isUserLoggedIn || userId === 'anonymous') {
                showAuthModal();
                return;
            }

            const cleanedChapterName = chapterName.trim();

            // --- LOG THE ATTEMPT TO FIRESTORE (Quiz Start) ---
            db.collection(`artifacts/${appId}/users/${userId}/quiz_attempts`).add({
                chapter: cleanedChapterName,
                timestamp: firebase.firestore.FieldValue.serverTimestamp(),
                action: 'Quiz Attempted'
            })
            .then(() => {
                console.log("Quiz attempt logged successfully for:", cleanedChapterName);
            })
            .catch((error) => {
                console.error("Error logging quiz attempt (Check Firestore Rules!): ", error);
            });
            // --- END LOGIC ---

            // Placeholder for actual quiz navigation
            alert(`Quiz ready for: ${cleanedChapterName}! (A full quiz page would load here.)`);
        }

        function showView(viewId) {
            document.querySelectorAll('#quiz-content-wrapper .view').forEach(view => {
                view.classList.add('hidden');
            });
            document.getElementById(viewId + '-view').classList.remove('hidden');
            window.scrollTo(0, 0);
        }

        function showUnits(bookKey, title, color) {
            const units = bookData[bookKey];

            unitsViewTitle.textContent = title;
            unitsViewTitle.style.borderColor = `var(--tw-colors-${color})`; // Use the custom color variable

            let html = '';
            units.forEach((unitItem, index) => {
                const unitId = `${bookKey}-unit-${index}`;

                let chaptersHtml = unitItem.chapters.map((chapter) => `
                    <div class="chapter-card bg-white p-4 rounded-lg shadow border-l-4 border-current flex justify-between items-center" style="border-color: var(--tw-colors-${color});">
                        <span class="text-gray-700 font-medium">${chapter}</span>
                        <button class="quiz-btn bg-cbse-blue text-white px-4 py-2 text-sm font-semibold rounded-lg hover:bg-cbse-blue/90 transition quiz-start-btn" data-chapter="${chapter.replace(/'/g, '\\\'')}">Start Quiz</button>
                    </div>
                `).join('');

                html += `
                    <div class="border border-gray-200 rounded-xl overflow-hidden mb-6">
                        <div class="unit-header bg-unit-bg p-4 flex justify-between items-center font-bold text-gray-700 hover:bg-unit-bg/80 active cursor-pointer transition duration-150" data-target="${unitId}">
                            <span>${unitItem.unit}</span>
                            <span data-lucide="chevron-down" class="icon-rotate w-5 h-5 transition-transform duration-300"></span>
                        </div>
                        <div id="${unitId}" class="unit-content p-4 grid gap-4 sm:grid-cols-2 md:grid-cols-3">
                            ${chaptersHtml}
                        </div>
                    </div>
                `;
            });

            unitsList.innerHTML = html;
            lucide.createIcons();
            showView('units');

            attachEventListeners();
            setTimeout(initAccordion, 10);
        }

        function initAccordion() {
            document.querySelectorAll('.unit-header').forEach(header => {
                const content = document.getElementById(header.dataset.target);
                if (content) {
                    // Set initial state to open
                    content.style.maxHeight = content.scrollHeight + "px";
                    header.classList.add('active');

                    header.removeEventListener('click', handleAccordionClick);
                    header.addEventListener('click', handleAccordionClick);
                }
            });
        }

        function handleAccordionClick(event) {
            const header = event.currentTarget;
            const content = document.getElementById(header.dataset.target);

            header.classList.toggle('active');
            if (header.classList.contains('active')) {
                content.style.maxHeight = content.scrollHeight + "px";
            } else {
                content.style.maxHeight = '0';
            }
        }

        // --- ATTACH EVENT LISTENERS (Consolidated) ---

        function attachEventListeners() {
            document.querySelectorAll('.quiz-start-btn').forEach(button => {
                button.removeEventListener('click', handleQuizButtonClick);
                button.addEventListener('click', handleQuizButtonClick);
            });

            document.querySelectorAll('.book-select-btn').forEach(card => {
                if (!card.hasAttribute('data-listener-attached')) {
                    card.addEventListener('click', handleBookSelectClick);
                    card.setAttribute('data-listener-attached', 'true');
                }
            });
        }

        // --- Event Handlers that use Data Attributes ---

        function handleQuizButtonClick(event) {
            const chapterName = event.currentTarget.dataset.chapter;
            startQuiz(chapterName);
        }

        function handleBookSelectClick(event) {
            const card = event.currentTarget;
            const book = card.dataset.book;
            const title = card.dataset.title;
            const color = card.dataset.color;
            showUnits(book, title, color);
        }

        // --- Initialization on Document Load ---
        document.addEventListener('DOMContentLoaded', () => {
            lucide.createIcons();

            attachEventListeners();

            // Link to the main Class 9 index
            document.querySelector('header h1').parentNode.addEventListener('click', () => {
                window.location.href='index_class_9.html';
            });

            backToBooksBtn.addEventListener('click', () => showView('book-select'));
        });

    </script>
</body>
</html>
